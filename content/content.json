{
  "meta": {
    "generator": "chatgpt-content-pack",
    "version": "1.0.0",
    "created": "2025-08-14",
    "owner": "Sagar Neeli"
  },
  "site": {
    "title": "Sagar Neeli \u2014 Senior Backend & AI Engineer",
    "tagline": "I design and scale reliable backend and AI-powered systems.",
    "theme": {
      "colorScheme": {
        "primary": "#2563EB",
        "accent": "#14B8A6"
      },
      "darkMode": true
    },
    "seo": {
      "metaTitle": "Sagar Neeli \u2014 Senior Backend & AI Engineer (Python, Java, Go)",
      "metaDescription": "Senior Backend Engineer in Boston specializing in microservices, event-driven systems, storage, and AI/ML. Built CMS platforms, translation at scale, and high-throughput ads systems.",
      "openGraphImage": "/og/sagar-neeli.png"
    }
  },
  "hero": {
    "name": "Sagar Neeli",
    "headline": "Senior Backend & AI Engineer",
    "subheadline": "Backend, Distributed Systems, Storage, and Applied AI/ML",
    "location": "Boston, Massachusetts, United States",
    "ctas": [
      {
        "label": "Download Resume",
        "href": "/assets/resume.pdf"
      },
      {
        "label": "Contact",
        "href": "#contact"
      },
      {
        "label": "GitHub",
        "href": "https://github.com/sagarneeli"
      },
      {
        "label": "LinkedIn",
        "href": "https://www.linkedin.com/in/sagarneeli"
      }
    ]
  },
  "about": {
    "blurb_md": "I'm a results-driven backend engineer focused on the modern web stack and distributed systems. Over nearly a decade, I've built and scaled services across e\u2011commerce, fintech/insurtech, SaaS platforms, and storage infrastructure. I enjoy shipping clean APIs, enabling teams with platform abstractions, and solving hard systems problems.\n\nRecently, my work spans **storage engineering**, **enterprise data & ML workflows**, and platform capabilities like **AI-assisted translation** and large-scale content systems. Beyond work, I enjoy jogging, reading manga, and keeping up with new technologies.",
    "interests": [
      "Design Patterns",
      "CI/CD",
      "REST APIs",
      "API Development",
      "Domain-Driven Design",
      "Machine Learning"
    ]
  },
  "links": {
    "email": "sagarneeli1191@gmail.com",
    "phone": "+1-857-991-7295",
    "linkedin": "https://www.linkedin.com/in/sagarneeli",
    "github": "https://github.com/sagarneeli"
  },
  "experience": [
    {
      "company": "Akamai Technologies",
      "role": "Senior Software Engineer",
      "team": "Storage Engineering",
      "location": "Cambridge, MA",
      "start": "2025-07",
      "end": null,
      "highlights": [
        "Contributing to block storage and data-path services with a focus on performance, reliability, and observability.",
        "Collaborating across platform and SRE teams to improve operability and CI/CD for storage services."
      ],
      "tech": [
        "Python",
        "Go",
        "Ceph",
        "Kubernetes",
        "Docker",
        "CI/CD"
      ]
    },
    {
      "company": "CVS Health",
      "role": "Senior Software Engineer",
      "team": "Prior Authorization Operations \u2014 Enterprise Data & ML",
      "location": "Wellesley, MA",
      "start": "2025-03",
      "end": "2025-07",
      "highlights": [
        "Worked with data/ML stakeholders to enable prior authorization workflows and data services.",
        "Emphasis on secure services, data quality, and integration with ML-driven processes."
      ],
      "tech": [
        "Python",
        "APIs",
        "Data Pipelines"
      ]
    },
    {
      "company": "HubSpot",
      "role": "Senior Software Engineer",
      "location": "Boston, MA",
      "start": "2023-01",
      "end": "2025-02",
      "highlights": [
        "Architected a scalable Content Management Platform consolidating 5+ content types and cutting onboarding time by ~50%.",
        "Designed and shipped AI-assisted translation integration supporting 30+ languages with broad marketer adoption.",
        "Built REST APIs for CRM integrations used by thousands of marketers; improved content engagement metrics."
      ],
      "tech": [
        "Java",
        "Dropwizard",
        "Guice",
        "AWS Lambda",
        "S3",
        "CloudWatch",
        "Kafka",
        "MySQL",
        "HBase"
      ]
    },
    {
      "company": "Jetty",
      "role": "Senior Software Engineer \u2014 Technical Lead",
      "location": "NYC Metro Area",
      "start": "2021-03",
      "end": "2023-01",
      "highlights": [
        "Built 20+ partner integrations syncing 500k+ resident records using an event-driven, serverless approach.",
        "Designed a distributed messaging system with SQS and Python CDK; reduced third\u2011party vendor upload latency significantly.",
        "Led Partner Management tooling (Flask + React/GraphQL) to automate onboarding and reduce manual processes."
      ],
      "tech": [
        "Python",
        "Flask",
        "React",
        "GraphQL",
        "AWS",
        "SQS",
        "CDK",
        "Redis",
        "Snowflake",
        "dbt"
      ]
    },
    {
      "company": "Wayfair",
      "role": "Senior Software Engineer \u2014 Technical Lead",
      "location": "Boston, MA",
      "start": "2016-02",
      "end": "2021-02",
      "highlights": [
        "Built server-side ad\u2011serving pipeline integrating with third\u2011party ad servers to improve on\u2011site ad performance.",
        "Automated supplier reporting with internal tools; substantial cost savings.",
        "Defined media product specs and platform capabilities for 10k+ suppliers and 50k+ campaigns; integrated AppNexus."
      ],
      "tech": [
        "Java",
        "Dropwizard",
        "Docker",
        "Kubernetes",
        "Memcached",
        "Python",
        "React",
        "GraphQL",
        "MS SQL"
      ]
    },
    {
      "company": "Road Scholar",
      "role": "Web Developer Intern",
      "location": "Boston, MA",
      "start": "2015-01",
      "end": "2015-06",
      "highlights": [
        "Autocomplete UI with Elasticsearch n\u2011gram tokenizer; increased signups.",
        "ETL/Email automation for large user datasets; integrated Chase Orbital for payments."
      ],
      "tech": [
        "JavaScript",
        "React",
        "MySQL",
        "Boomi ETL"
      ]
    },
    {
      "company": "RSA (EMC)",
      "role": "Software Quality Engineer Intern",
      "location": "Bedford, MA",
      "start": "2014-05",
      "end": "2014-08",
      "highlights": [
        "JMX-based monitoring and CI dashboards; improved code coverage.",
        "Custom XML parser for token reporting data; saved manual engineering time."
      ],
      "tech": [
        "Java",
        "TestNG",
        "JMX",
        "XML"
      ]
    }
  ],
  "projects": [
    {
      "name": "Next\u2011Gen CMS Platform",
      "period": "2023\u20132025",
      "summary": "Unified multiple content types into a scalable microservices platform; faster onboarding and extensibility.",
      "impact": [
        "~50% faster onboarding for internal teams",
        "Accelerated feature delivery timelines"
      ],
      "tech": [
        "Java",
        "Dropwizard",
        "AWS",
        "Kafka",
        "MySQL",
        "HBase"
      ],
      "links": []
    },
    {
      "name": "AI\u2011Assisted Translation",
      "period": "2023\u20132024",
      "summary": "Integrated DeepL-based translation into content workflows enabling localization at scale.",
      "impact": [
        "30+ languages supported",
        "High adoption among marketers"
      ],
      "tech": [
        "Java",
        "AWS Lambda",
        "DeepL API"
      ],
      "links": []
    },
    {
      "name": "Event\u2011Driven Messaging System",
      "period": "2021\u20132022",
      "summary": "SQS and Python CDK based messaging to synchronize purchase data to third-party vendors with reduced latency.",
      "impact": [
        "Significant latency reduction to vendors",
        "Higher reliability via infra as code"
      ],
      "tech": [
        "Python",
        "AWS SQS",
        "AWS CDK",
        "Serverless"
      ],
      "links": []
    },
    {
      "name": "Partner Onboarding Automation",
      "period": "2021\u20132022",
      "summary": "Flask + React/GraphQL tool to automate partner onboarding.",
      "impact": [
        "Reduced manual process and onboarding time"
      ],
      "tech": [
        "Flask",
        "React",
        "GraphQL"
      ],
      "links": []
    },
    {
      "name": "Server\u2011Side Ad Auction",
      "period": "2018\u20132020",
      "summary": "Built a server-side ad auction pipeline integrated with third-party ad servers to improve page performance.",
      "impact": [
        "Improved on-site ad performance",
        "Contributed to revenue growth"
      ],
      "tech": [
        "Java",
        "Dropwizard",
        "Docker",
        "Kubernetes",
        "Memcached"
      ],
      "links": []
    }
  ],
  "skills": {
    "languages": [
      "Python",
      "Java",
      "Go",
      "TypeScript",
      "PHP",
      "SQL",
      "NoSQL"
    ],
    "frameworks": [
      "FastAPI",
      "Flask",
      "Dropwizard",
      "React",
      "Node.js"
    ],
    "cloud_infra": [
      "AWS",
      "GCP",
      "Docker",
      "Kubernetes",
      "Kafka",
      "Redis",
      "Memcached",
      "Elasticsearch",
      "Serverless"
    ],
    "data": [
      "MySQL",
      "PostgreSQL",
      "HBase",
      "Snowflake",
      "Hive",
      "Spark",
      "dbt"
    ],
    "storage_security": [
      "Ceph",
      "Block Storage",
      "Network Security"
    ],
    "ai_ml": [
      "OpenAI API",
      "Hugging Face Transformers",
      "LangChain",
      "RAG",
      "Embeddings",
      "Vector DBs (FAISS, Weaviate, Pinecone)",
      "Prompt Engineering",
      "LLM Evaluation (offline harness)"
    ]
  },
  "ai_showcase": {
    "intro_md": "I build **AI-assisted features** on solid platform foundations. My interests include retrieval\u2011augmented generation (RAG), agentic orchestration, prompt engineering, and evaluation for reliability. I prioritize clear interfaces, observability, and secure data access patterns so that AI features ship safely and scale.",
    "demos": [
      {
        "name": "RAG Demo (Optional)",
        "description": "Local corpus + embeddings + vector search + LLM answer synthesis.",
        "tech": [
          "Python",
          "FastAPI",
          "LangChain",
          "FAISS/Qdrant"
        ],
        "route": "/demos/rag"
      },
      {
        "name": "Agentic Portfolio Assistant (Optional)",
        "description": "Portfolio-aware assistant that routes to skills/projects/content search tools.",
        "tech": [
          "Next.js",
          "TypeScript",
          "Server Actions",
          "LLM Tools"
        ],
        "route": "/demos/agent"
      }
    ]
  },
  "integrations": {
    "github": {
      "pinnedRepos": true
    },
    "analytics": {
      "provider": "Plausible",
      "anonymizeIPs": true
    },
    "contact": {
      "method": "email_form",
      "to": "sagarneeli1191@gmail.com"
    }
  },
  "production": {
    "repo": {
      "defaultBranch": "main",
      "devBranch": "dev",
      "flow": "feature/* -> PR to dev -> preview deploy -> PR to main -> production deploy"
    },
    "protections": {
      "requireStatusChecks": true,
      "linearHistory": true,
      "dismissStaleReviews": true,
      "requireApprovals": true,
      "blockForcePushes": true
    },
    "ci_cd": {
      "workflows": [
        "ci-frontend.yml",
        "ci-backend.yml",
        "preview-deploy.yml",
        "prod-deploy.yml",
        "codeql.yml"
      ],
      "requiredChecks": [
        "frontend-ci",
        "backend-ci",
        "codeql",
        "preview-smoke",
        "prod-smoke"
      ]
    },
    "testing": {
      "frontend": [
        "TypeCheck (tsc --noEmit)",
        "ESLint",
        "Prettier check",
        "Jest unit",
        "Playwright smoke"
      ],
      "backend": [
        "ruff",
        "mypy --strict",
        "pytest --cov >= 85%"
      ],
      "e2e": [
        "Playwright against preview/prod URLs"
      ]
    },
    "docker": {
      "frontend": "Multi-stage build or Vercel native",
      "backend": "Multi-stage build with non-root user & healthcheck",
      "compose": [
        "frontend",
        "backend",
        "optional: postgres",
        "optional: qdrant"
      ]
    },
    "ops": {
      "logging": "JSON structured logs",
      "health": [
        "/healthz",
        "/readyz"
      ],
      "metrics": "Prometheus or OpenTelemetry",
      "errors": "Sentry (optional)"
    },
    "config": {
      "twelveFactor": true,
      "envExample": true,
      "featureFlags": true
    },
    "docs": [
      "README.md",
      "CONTRIBUTING.md",
      "SECURITY.md",
      "ARCHITECTURE.md",
      ".github/pull_request_template.md"
    ]
  }
}
