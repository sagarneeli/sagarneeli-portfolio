[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sagarneeli-portfolio-backend"
version = "0.1.0"
description = "Backend API for Sagar Neeli's portfolio website"
authors = [
    {name = "Sagar Neeli", email = "sagarneeli1191@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[all]>=0.116.1",
    "uvicorn[standard]>=0.35.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "sqlalchemy>=2.0.43",
    "alembic>=1.16.4",
    "psycopg2-binary>=2.9.10",
    "redis>=6.4.0",
    "python-jose[cryptography]>=3.5.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.20",
    "celery>=5.5.3",
    "httpx>=0.28.1",
    "python-dotenv>=1.1.1",
    "openai>=1.51.0",
    "langchain>=0.2.16",
    "langchain-openai>=0.1.25",
    "langchain-community>=0.2.16",
    "transformers>=4.42.2",
    "torch>=2.4.1",
    "sentence-transformers>=3.0.1",
    "qdrant-client>=1.10.1",
    "sentry-sdk>=2.34.1",
    "opentelemetry-api>=1.28.0",
    "opentelemetry-sdk>=1.28.0",
    "opentelemetry-instrumentation-fastapi>=0.49b0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.8",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-asyncio>=0.24.0",
    "black>=25.1.0",
    "pre-commit>=4.3.0",
]

[project.scripts]
start = "uvicorn app.main:app --host 0.0.0.0 --port 8000"
dev = "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "alembic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
